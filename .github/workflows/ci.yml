name: Build and deploy container to ECR
on:
  push:

permissions:
  contents: read
  id-token: write

env:
  REPOSITORY: csc-app/mailslurper

jobs:
  build:
    name: Build docker image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::810496140366:role/github-csc-app-mailslurper
          aws-region: eu-central-1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1


      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Extract branch name
        shell: bash
        run: echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT
        id: extract_branch

      - name: Build docker
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: docker buildx build .
            --build-arg ENVIRONMENT=staging 
            --build-arg TOLGEE_DOWNLOAD_API_KEY=${{ secrets.TOLGEE_DOWNLOAD_API_KEY }} 
            --cache-from type=local,src=/tmp/.buildx-cache 
            --cache-to type=local,dest=/tmp/.buildx-cache-new 
            --tag ${{ env.REGISTRY }}/${{ env.REPOSITORY }}:${{ github.sha }} 
            --tag ${{ env.REGISTRY }}/${{ env.REPOSITORY }}:${{ steps.extract_branch.outputs.branch }}
            --tag ${{ env.REGISTRY }}/${{ env.REPOSITORY }}:${{ steps.extract_branch.outputs.branch == 'master' && 'latest' || 'do-not-use' }}
            --platform linux/amd64,linux/arm64
            --push

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache